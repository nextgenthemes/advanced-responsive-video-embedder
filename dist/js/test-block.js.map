{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/test-block.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","el","window","wp","element","createElement","registerBlockType","blocks","ServerSideRender","components","TextControl","ToggleControl","InspectorControls","editor","title","icon","category","edit","props","block","attributes","label","foo","onChange","setAttributes","toggle","save"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6FC1ErD,IAAMC,EAAKC,OAAOC,GAAGC,QAAQC,cAC5BC,EAAoBJ,OAAOC,GAAGI,OAAOD,kBACrCE,EAAmBN,OAAOC,GAAGM,WAAWD,iBACxCE,EAAcR,OAAOC,GAAGM,WAAWC,YACnCC,EAAgBT,OAAOC,GAAGM,WAAWE,cACrCC,EAAoBV,OAAOC,GAAGU,OAAOD,kBAUtCN,EAAkB,2BAA4B,CAC7CQ,MAAO,YACPC,KAAM,YACNC,SAAU,UAQVC,KAAM,SAACC,GACN,MAAO,CAMNjB,EAAGO,EAAkB,CACpBW,MAAO,2BACPC,WAAYF,EAAME,aASnBnB,EACCW,EACA,GACAX,EAAGS,EAAa,CACfW,MAAO,MACPnC,MAAOgC,EAAME,WAAWE,IACxBC,SAAU,SAACrC,GACVgC,EAAMM,cAAc,CAAEF,IAAKpC,OAG7Be,EAAGU,EAAe,CACjBU,MAAO,SACPnC,MAAOgC,EAAME,WAAWK,OACxBF,SAAU,SAACrC,GACVgC,EAAMM,cAAc,CAAEC,OAAQvC,UAQnCwC,KAAM,WACL,OAAO","file":"/js/test-block.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// License: GPLv2+\nexport {};\ndeclare global {\n\tinterface Window {\n\t\twp;\n\t}\n}\n\nconst el = window.wp.element.createElement,\n\tregisterBlockType = window.wp.blocks.registerBlockType,\n\tServerSideRender = window.wp.components.ServerSideRender,\n\tTextControl = window.wp.components.TextControl,\n\tToggleControl = window.wp.components.ToggleControl,\n\tInspectorControls = window.wp.editor.InspectorControls;\n\n/*\n * Here's where we register the block in JavaScript.\n *\n * It's not yet possible to register a block entirely without JavaScript, but\n * that is something I'd love to see happen. This is a barebones example\n * of registering the block, and giving the basic ability to edit the block\n * attributes. (In this case, there's only one attribute, 'foo'.)\n */\nregisterBlockType('nextgenthemes/arve-block', {\n\ttitle: 'PHP Block',\n\ticon: 'megaphone',\n\tcategory: 'widgets',\n\n\t/*\n\t * In most other blocks, you'd see an 'attributes' property being defined here.\n\t * We've defined attributes in the PHP, that information is automatically sent\n\t * to the block editor, so we don't need to redefine it here.\n\t */\n\n\tedit: (props) => {\n\t\treturn [\n\t\t\t/*\n\t\t\t * The ServerSideRender element uses the REST API to automatically call\n\t\t\t * php_block_render() in your PHP code whenever it needs to get an updated\n\t\t\t * view of the block.\n\t\t\t */\n\t\t\tel(ServerSideRender, {\n\t\t\t\tblock: 'nextgenthemes/arve-block',\n\t\t\t\tattributes: props.attributes,\n\t\t\t}),\n\t\t\t/*\n\t\t\t * InspectorControls lets you add controls to the Block sidebar. In this case,\n\t\t\t * we're adding a TextControl, which lets us edit the 'foo' attribute (which\n\t\t\t * we defined in the PHP). The onChange property is a little bit of magic to tell\n\t\t\t * the block editor to update the value of our 'foo' property, and to re-render\n\t\t\t * the block.\n\t\t\t */\n\t\t\tel(\n\t\t\t\tInspectorControls,\n\t\t\t\t{},\n\t\t\t\tel(TextControl, {\n\t\t\t\t\tlabel: 'Foo',\n\t\t\t\t\tvalue: props.attributes.foo,\n\t\t\t\t\tonChange: (value) => {\n\t\t\t\t\t\tprops.setAttributes({ foo: value });\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tel(ToggleControl, {\n\t\t\t\t\tlabel: 'Toogle',\n\t\t\t\t\tvalue: props.attributes.toggle,\n\t\t\t\t\tonChange: (value) => {\n\t\t\t\t\t\tprops.setAttributes({ toggle: value });\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t),\n\t\t];\n\t},\n\n\t// We're going to be rendering in PHP, so save() can just return null.\n\tsave: () => {\n\t\treturn null;\n\t},\n});\n"],"sourceRoot":""}