#!/usr/bin/env php
<?php
use Symfony\Component\Yaml\Yaml;

require_once dirname( __DIR__ ) . '/vendor/autoload.php';
// phpcs:disable Squiz.PHP.DiscouragedFunctions.Discouraged
// phpcs:disable Squiz.PHP.CommentedOutCode.Found
// phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped
// phpcs:disable WordPress.PHP.DevelopmentFunctions.error_log_var_dump
// phpcs:disable WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents

function provider( $provider ) {
	echo PHP_EOL;

	$file = getenv( 'HOME' ) . "/dev/build/oembed/providers/$provider.yml";

	if ( ! is_file ( $file ) ) {
		echo "No file: $file";
		echo PHP_EOL;
		return;
	}

	$data      = Yaml::parseFile( $file );
	$endpoints = $data[0]['endpoints'][0];

	$example_data = file_get_contents( $endpoints['example_urls'][0] );
	$oembed_data  = json_decode( $example_data, true );
	$type = empty( $oembed_data['type'] ) ? '' : $oembed_data['type'];

	echo "$provider $type" . PHP_EOL;
	echo PHP_EOL;
	extract_urls( $oembed_data['html'] );
	echo PHP_EOL;
}

function extract_urls($text) {
    $regex = '#\bhttps?://[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|/))#';
    return preg_replace_callback($regex, function ($matches) {
        echo $matches[0] . PHP_EOL;
    }, $text);
}

foreach ( [
	'reddit',
	'polldaddy',
	'twitter',
	'flickr',
	'animoto',
	'issuu',
	'tumblr',
] as $key => $provider ) {
	provider( $provider );
}
