name: CI Build
on: [push]

jobs:
  # test:
  #   name: PHP Unit tests
    # strategy:
    #   matrix:
    #     # php: [5.6,7.0,7.1,7.2,7.3]
    #     php: [7.3]
    #     node: [12.9.0]
    #     mysql: [5.7.27]
    #     # wordpress: [4.9.10,5.2.4,latest]
    #     wordpress: [latest]
    # runs-on: ubuntu-latest
    # container:
    #   image: php:${{ matrix.php }}-apache
    #   env:
    #     NODE_ENV: production
    #   ports:
    #   - 80
    #   volumes:
    #   - $GITHUB_WORKSPACE:/var/www/html
    # services:
    #   mysql:
    #     image: mysql:${{ matrix.mysql }}
    #     env:
    #       MYSQL_ROOT_PASSWORD: root
    #     ports:
    #     - 3306
    #     volumes:
    #     - $HOME/mysql:/var/lib/mysql
    # steps:
    #   - name: skip for testing
    #     run: echo "SKIP"

      # - name: Checkout repository
      #   uses: actions/checkout@v1

      # - name: APT + docker
      #    # https://bigbite.net/insights/github-actions-ci-cd-with-yarn-composer-phpcs-phpunit-and-built-branches/ reminder
      #   run: |
      #     apt-get update -yqq
      #     apt-get install -yqqf default-mysql-client vim wget zip unzip git subversion libmcrypt-dev --fix-missing
      #     docker-php-ext-install mysqli pdo_mysql mbstring pcntl

      # - name: Install composer with official install script
      #   run: |
      #     bash bin/install-composer.sh
      #     mv composer.phar /usr/local/bin/composer

      # # we do remove composer lock because we need different phpunit versions based on current PHP version
      # - name: Run composer install
      #   run: |
      #     rm composer.lock
      #     composer install --quiet --no-interaction

      # - name: Install WordPress Test Suite
      #   run: bash bin/install-wp-tests.sh wordpress_test root root mysql ${{ matrix.wordpress }}

      # - name: Run PHPUnit
      #   run: vendor/bin/phpunit

  build:
    #needs: test
    name: Build release Zip
    runs-on: ubuntu-latest
    container:
      image: node:lts-buster
    env:
      DEPLOY_REF: ${{ github.sha }}
    steps:

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Set DEPLOY_REF_SHORT
        run: echo ::set-env name=DEPLOY_REF_SHORT::$(echo ${{ github.ref }} | sed "s/\//-/g")
      - run: echo "$DEPLOY_REF_SHORT"

      - name: Remove dashes from DEPLOY_REF_SHORT and set DEPLOY_ZIPFILE
        run: echo ::set-env name=DEPLOY_ZIPFILE::${{ github.workspace }}/build/zip/${{ github.event.repository.name }}-$(echo ${{ github.ref }} | sed "s/\//-/g").zip
      - run: echo "$DEPLOY_ZIPFILE"

      - name: Checkout repository
        uses: actions/checkout@v1

      # Same as on Gitlab
      - run: apt-get update -yqq
      - run: apt-get install -yqqf git tar wget zip unzip php --fix-missing
      - run: bash bin/install-composer.sh
      - run: chmod +x /usr/bin/composer
      - run: node --version
      - run: npm --version
      - run: php --version
      - run: composer --version
      - run: bash bin/git-zip.sh

      - uses: actions/upload-artifact@master
        with:
          name: "${{ DEPLOY_ZIPFILE }}"
          path: "${{ DEPLOY_ZIPFILE }}"

  # deploy:
  #   on: tag
  #   needs: [test, build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v1

  #     - name: Deploy
  #       run: bash bin/wporg-deploy