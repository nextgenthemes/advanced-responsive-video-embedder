name: CI Build
on: [push]

jobs:
  test:
    name: PHP Unit tests
    runs-on: ubuntu-latest
    env:
      DB_ADAPTER: mysql
      DB_HOST: 127.0.0.1
      DB_NAME: wordpress_test
      DB_USERNAME: root
      DB_PASSWORD: root
      CODECEPTION_URL: 127.0.0.1
      CODECEPTION_PORT: 8888
    strategy:
      matrix:
        php-versions: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4' ]
        wordpress: [ '4.9.12', '5.0.7', '5.1.3', '5.2.4', 'latest' ]
        exclude: # WP Bug https://core.trac.wordpress.org/ticket/44416
          - php-versions: '7.3'
            wordpress: '4.9.12'
          - php-versions: '7.4'
            wordpress: '4.9.12'          
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: databasename
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, zip, mysql
          coverage: none #optional

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Remove composer.lock # because we need different phpunit versions based on current PHP version
        run: rm composer.lock

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Install WP Tests
        run: bash ./bin/install-wp-tests.sh databasename root password 127.0.0.1 ${{ matrix.wordpress }} true

      - name: Run PHPUnit without code coverage
        #if: matrix.wordpress != 'latest' && matrix.php != '7.3'
        run: vendor/bin/phpunit

  build:
    needs: test
    name: Build release Zip
    runs-on: ubuntu-latest
    container:
      image: node:lts-buster
    steps:
      - run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - id: zip
        run: echo ::set-output name=file::build/zip/${{ github.event.repository.name }}-$(echo ${{ github.ref }} | sed "s/\//-/g" | sed -E -e "s/[^a-z0-9-]+//g").zip

      - name: Checkout repository
        uses: actions/checkout@master

      # Same as on Gitlab
      - run: apt-get update -yqq
      - run: apt-get install -yqqf git tar wget zip unzip php --fix-missing
      - run: bash bin/install-composer.sh
      - run: chmod +x /usr/bin/composer
      - run: node --version
      - run: npm --version
      - run: php --version
      - run: composer --version

      - run: mkdir -p $(dirname "${{ steps.zip.outputs.file }}")
      - run: git archive --format=zip --prefix="${PWD##*/}"/ --output="${{ steps.zip.outputs.file }}" ${{ github.sha }}

      - uses: actions/upload-artifact@master
        with:
          name: artifact
          path: build

      # - name: Maybe deploy to wp.org
      #   if: startsWith(github.ref, 'refs/tags') && ! startsWith(github.event.repository.name, 'arve-') && startsWith(github.ref, 'refs/tags') && ! contains(github.ref, 'beta') && ! contains(github.ref, 'alpha')
      #   run: |
      #     apt-get install -yqqf subversion
      #     bash bin/wporg-deploy.sh
      #   env:
      #     DEPLOY_REF: ${{ github.sha }}
      #     DEPLOY_ZIPFILE: ${{ github.workspace }}/${{ steps.zip.outputs.file }}
      #     SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
      #     SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
