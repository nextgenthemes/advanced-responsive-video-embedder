name: CI Build
on: [push]

jobs:
  test:
    name: PHP Unit tests
    strategy:
      matrix:
        php: [5.6,7.1,7.2,7.3] # There is NO 7.0 docker image, it will be displayed as '7' and will actually be the latest 7.x
        mysql: [5.7.27]
        wordpress: [4.9.12,5.0.7,5.1.3,5.2.4,latest]
        exclude: # WP Bug https://core.trac.wordpress.org/ticket/44416
          - php: 7.3
            mysql: 5.7.27
            wordpress: 4.9.12
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-apache
      ports:
        - 80
      volumes:
        - $GITHUB_WORKSPACE:/var/www/html
    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        volumes:
          - $HOME/mysql:/var/lib/mysql
    steps:

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: APT + docker
         # https://bigbite.net/insights/github-actions-ci-cd-with-yarn-composer-phpcs-phpunit-and-built-branches/ reminder
        run: |
          apt-get update -yqq
          apt-get install -yqqf default-mysql-client vim wget zip unzip git subversion libmcrypt-dev --fix-missing
          docker-php-ext-install mysqli pdo_mysql mbstring pcntl

      - name: Install composer
        run: bash bin/install-composer.sh
      
      - name: Run composer install
        run: |
          rm composer.lock # we do remove composer lock because we need different phpunit versions based on current PHP version
          composer install --quiet --no-interaction

      - name: Install WordPress Test Suite
        run: bash bin/install-wp-tests.sh wordpress_test root root mysql ${{ matrix.wordpress }}

      - name: Run PHPUnit
        if: 'latest' != matrix.wordpress && '7.3' != matrix.php
        run: vendor/bin/phpunit

      - name: Run PHPUnit
        if: 'latest' == matrix.wordpress && '7.3' == matrix.php
        run: |
          composer require --dev php-coveralls/php-coveralls 
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml

  build:
    needs: test
    name: Build release Zip
    runs-on: ubuntu-latest
    container:
      image: node:lts-buster
    steps:

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - id: zip
        run: echo ::set-output name=file::build/zip/${{ github.event.repository.name }}-$(echo ${{ github.ref }} | sed "s/\//-/g" | sed -E -e "s/[^a-z0-9-]+//g").zip

      - name: Checkout repository
        uses: actions/checkout@v1

      # Same as on Gitlab
      - run: apt-get update -yqq
      - run: apt-get install -yqqf git tar wget zip unzip php --fix-missing
      - run: bash bin/install-composer.sh
      - run: chmod +x /usr/bin/composer
      - run: node --version
      - run: npm --version
      - run: php --version
      - run: composer --version
      - run: bash bin/git-zip.sh
        env:
          DEPLOY_REF: ${{ github.sha }}
          DEPLOY_ZIPFILE: ${{ github.workspace }}/${{ steps.zip.outputs.file }}

      - uses: actions/upload-artifact@master
        with:
          name: Build Zipfile
          path: "${{ steps.zip.outputs.file }}"

      - name: Maybe deploy to wp.org
        if: startsWith(github.ref, 'refs/tags') && ! startsWith(github.event.repository.name, 'arve-') && startsWith(github.ref, 'refs/tags') && ! contains(github.ref, 'beta') && ! contains(github.ref, 'alpha')
        run: |
          apt-get install -yqqf subversion
          bash bin/wporg-deploy.sh
        env:
          DEPLOY_REF: ${{ github.sha }}
          DEPLOY_ZIPFILE: ${{ github.workspace }}/${{ steps.zip.outputs.file }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}