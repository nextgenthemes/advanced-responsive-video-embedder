name: test-deploy
on: [push, pull_request]

jobs:
  test:
    if: >-
      startsWith(github.ref, 'refs/tags')
      || contains(github.event.head_commit.message, '[ci]')
    name: PHP Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4' ]
        wordpress: [ '5.8.4', 'latest' ] # https://wordpress.org/download/releases/
        include:
          - php: '8.0'
            wordpress: 'latest'
          - php: '7.4'
            wordpress: '6.0-beta1'
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: dbpass
          MYSQL_DATABASE: dbname
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout ARVE
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Checkout ARVE Pro
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
        with:
          repository: nextgenthemes/arve-pro
          ref: v5
          path: plugins/arve-pro
          token: ${{ secrets.REPO_TOKEN }}

      - name: Checkout ARVE Random Video
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
        with:
          repository: nextgenthemes/arve-random-video
          ref: master
          path: plugins/arve-random-video
          token: ${{ secrets.REPO_TOKEN }}

      - name: Checkout ARVE AMP
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
        with:
          repository: nextgenthemes/arve-amp
          ref: master
          path: plugins/arve-amp
          token: ${{ secrets.REPO_TOKEN }}

      - name: Checkout ARVE Sticky Videos
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
        with:
          repository: nextgenthemes/arve-sticky-videos
          ref: master
          path: plugins/arve-sticky-videos
          token: ${{ secrets.REPO_TOKEN }}

      - run: echo "use $COMPOSER"
        env:
          COMPOSER: composer
      - if: matrix.php == '5.6' || matrix.php == '7.0' || matrix.php == '7.1'
        run: echo "use $COMPOSER"
        env:
          COMPOSER: composer:2.2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@448bd61c6fe9db2113173467e4c22b87ddc2971a # 2.18.1 # https://github.com/shivammathur/setup-php/releases/
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, dom, zip, mysql, gd
          tools: ${{ env.COMPOSER }}
          coverage: none #optional

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # 2.1.7
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }} # Use composer.json if composer.lock is not committed.
          restore-keys: ${{ runner.os }}-composer-

      - if: matrix.wordpress != 'latest'
        name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      # - if: matrix.wordpress == '5.8.2' && (matrix.php == '5.6' || matrix.php == '7.0')
      #   name: Install the right phpunit version
      #   run: |
      #     composer remove --dev phpunit/phpunit
      #     composer require "phpunit/phpunit:^5.0.0"

      - if: matrix.wordpress == 'latest'
        name: Install the right phpunit version
        continue-on-error: true
        run: composer remove --dev phpunit/phpunit # does not remove phpunit but upgrades it, exactly what we want

      - if: matrix.wordpress == 'latest'
        name: Install the right phpunit version
        run: composer update -W

      - name: Install WP Tests
        run: bash ./bin/install-wp-tests.sh dbname root dbpass "127.0.0.1:$DB_PORT" ${{ matrix.wordpress }} true
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run PHPUnit without code coverage
        run: vendor/bin/phpunit

  deploy:
    if: >-
      startsWith(github.ref, 'refs/tags')
      && ! startsWith(github.event.repository.name, 'arve-')
      && ! contains(github.ref, 'alpha')
    needs: test
    name: SVN commit to wp.org
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      # - name: Install Composer dependencies
      #   run: composer install --no-dev --no-progress --no-suggest --prefer-dist --optimize-autoloader
      #   with:
      #     working-directory: plugins/advanced-responsive-video-embedder

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Deploy
        uses: ./actions/wp-plugin-deploy
        with:
          workdir: plugins/advanced-responsive-video-embedder
          version: ${{ steps.get_version.outputs.VERSION }}
          svn_user: ${{ secrets.SVN_USERNAME }}
          svn_pass: ${{ secrets.SVN_PASSWORD }}
